package main

var tests = []Test {
	{"TestAssertTruth", TestAssertTruth},
	{"TestAssertWithMessage", TestAssertWithMessage},
	{"TestFillInValues", TestFillInValues},
	{"TestAssertEquality", TestAssertEquality},
	{"TestABetterWayOfAssertingEquality", TestABetterWayOfAssertingEquality},
	{"TestEmptyPointerIsNil", TestEmptyPointerIsNil},
	{"TestCreatingArray", TestCreatingArray},
	{"TestArraysAreValues", TestArraysAreValues},
	{"TestAccessingArrayElements", TestAccessingArrayElements},
	{"TestSlicingArrays", TestSlicingArrays},
	{"TestCreatingMap", TestCreatingMap},
	{"TestDoubleQuotedStringsAreStrings", TestDoubleQuotedStringsAreStrings},
	{"TestBackQuotedStringsAreStrings", TestBackQuotedStringsAreStrings},
	{"TestPlusConcatenatesString", TestPlusConcatenatesString},
	{"TestPlusWillNotModifyOriginalStrings", TestPlusWillNotModifyOriginalStrings},
	{"TestPlusEqualsWillAppendToEndOfString", TestPlusEqualsWillAppendToEndOfString},
	{"TestPlusEqualsAlsoLeavesOriginalStringUnmodified",
	TestPlusEqualsAlsoLeavesOriginalStringUnmodified},
	{"TestUseSprintfToInterpolateVaribales", TestUseSprintfToInterpolateVaribales},
	{"TestYouCanGetASubstringFromAString", TestYouCanGetASubstringFromAString},
	{"TestYouCanGetASingleCharacterFromAString", TestYouCanGetASingleCharacterFromAString},
	{"TestCharactersAreBytesActually", TestCharactersAreBytesActually},
	{"TestStringsCanBeSplit", TestStringsCanBeSplit},
	{"TestStringsCanBeSplitWithDifferentPatterns", TestStringsCanBeSplitWithDifferentPatterns},
	{"TestTupleAssignment", TestTupleAssignment},
	{"TestTupleAssignmentBlankIdentifier", TestTupleAssignmentBlankIdentifier},
	{"TestSwapWithTuples", TestSwapWithTuples},
	{"TestEveryTypeCanHaveMethods", TestEveryTypeCanHaveMethods},
	{"TestCallingAGlobalFunction", TestCallingAGlobalFunction},
	{"TestFunctionWithMultipleReturnTypes", TestFunctionWithMultipleReturnTypes},
	{"TestFunctionWithNamedReturnValues", TestFunctionWithNamedReturnValues},
	{"TestInterfaces", TestInterfaces},
	{"TestIfThenElseStatements", TestIfThenElseStatements},
	{"TestIfThenStatement", TestIfThenStatement},
	{"TestWhileStatement", TestWhileStatement},
	{"TestBreakStatement", TestBreakStatement},
	{"TestContinueStatement", TestContinueStatement},
	{"TestForStatement", TestForStatement},
	{"TestForEachStatement", TestForEachStatement},
	{"TestEquilateralTrianglesHaveEqualSides", TestEquilateralTrianglesHaveEqualSides},
	{"TestIsoscelesTrianglesHaveExactlyTwoSidesEqual",
	TestIsoscelesTrianglesHaveExactlyTwoSidesEqual},
	{"TestScaleneTrianglesHaveNoEqualSides", TestScaleneTrianglesHaveNoEqualSides},
	{"TestIllegalTrianglesReturnErrors", TestIllegalTrianglesReturnErrors},
	{"TestClosuresCanBeAssignedToVariablesAndCalledExplicitly",
	TestClosuresCanBeAssignedToVariablesAndCalledExplicitly},
	{"TestAccessingClosureViaAssignment",
	TestAccessingClosureViaAssignment},
	{"TestAccessingClosureWithoutAssignment",
	TestAccessingClosureWithoutAssignment},
	{"TestScoreOfAnEmptyListIsZero",
	TestScoreOfAnEmptyListIsZero},
	{"TestScoreOfASingleRollOf_5_Is_50",
	TestScoreOfASingleRollOf_5_Is_50},
	{"TestScoreOfASingleRollOf_1_Is_100",
	TestScoreOfASingleRollOf_1_Is_100},
	{"TestScoreOfMultiple_1sAnd_5sIsTheSumOfIndividualScores",
	TestScoreOfMultiple_1sAnd_5sIsTheSumOfIndividualScores},
	{"TestScoreOfSingle_2s_3s_4s_And_6s_AreZero",
	TestScoreOfSingle_2s_3s_4s_And_6s_AreZero},
	{"TestScoreOfTriple_1_Is_1000",
	TestScoreOfTriple_1_Is_1000},
	{"TestScoreOfOtherTriplesIs_100x",
	TestScoreOfOtherTriplesIs_100x},
	{"TestScoreOfMixedIsSum",
	TestScoreOfMixedIsSum},
	{"TestInstancesOfStructsCanBeGeneratedWithFigureBrackets",
	TestInstancesOfStructsCanBeGeneratedWithFigureBrackets},
	{"TestConstructorIsJustASeparateFunction",
	TestConstructorIsJustASeparateFunction},
	{"TestAnyoneCanAccessField",
	TestAnyoneCanAccessField},
	{"TestCanCreateADiceSet",
	TestCanCreateADiceSet},
	{"TestRollingTheDiceReturnsASetOfIntegersBetween_1_And_6",
	TestRollingTheDiceReturnsASetOfIntegersBetween_1_And_6},
	{"TestDiceValuesDoNotChangeUnlessExplicitlyRolled",
	TestDiceValuesDoNotChangeUnlessExplicitlyRolled},
	{"TestDiceValuesShouldChangeBetweenRolls",
	TestDiceValuesShouldChangeBetweenRolls},
	{"TestYouCanRollDifferentNumbersOfDice",
	TestYouCanRollDifferentNumbersOfDice},
	{"TestEveryChannelReceiveValue",
	TestEveryChannelReceiveValue},
	{"TestAnyStructWithRequiredMethodsSatisfiesInterface",
	TestAnyStructWithRequiredMethodsSatisfiesInterface},
	{"TestEmbeddingInterface",
	TestEmbeddingInterface},
	{"TestEmbeddingStruct",
	TestEmbeddingStruct},
}

var sampleTests = []Test {
	{"TestInterfaces", TestInterfaces},
}

func main() {
	Main(tests)
}
